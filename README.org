#+TITLE: Python neo4j usage
#+TAGS: cryptokasten, neo4j, python
#+PROPERTY: header-args:sh :session *shell python-neo4j-usage sh* :results silent raw
#+PROPERTY: header-args:python :session *shell python-neo4j-usage python* :results silent raw
#+OPTIONS: ^:nil

[[https://github.com/cryptokasten][file:https://img.shields.io/badge/dynamic/json.svg?url=https://api.github.com/users/cryptokasten&label=Cryptokasten&query=$.public_repos]]

** System environment

- Neo4j version 4.1.1

- Python 3.7.4

Python modules:

- neo4j==4.1.1

** Install neo4j

#+BEGIN_SRC sh
pip install neo4j
#+END_SRC

** Imports

#+BEGIN_SRC python
from neo4j import GraphDatabase
#+END_SRC

** Creds

#+BEGIN_SRC python
uri = "neo4j://127.0.0.1:7687"
user = ""
password = ""
#+END_SRC

** Create and return greeting

#+BEGIN_SRC python
def create_and_return_greeting(tx, message):
    result = tx.run("CREATE (a:Greeting) "
                    "SET a.message = $message "
                    "RETURN a.message + ', from node ' + id(a)", message=message)
    return result.single()[0]
#+END_SRC

** Connect

#+BEGIN_SRC python
driver = GraphDatabase.driver(uri, auth=(user, password))
#+END_SRC

** Session

#+BEGIN_SRC python
session = driver.session()
#+END_SRC

** Write transaction

#+BEGIN_SRC python
message = "Test"
#+END_SRC

#+BEGIN_SRC python
greeting = session.write_transaction(create_and_return_greeting, message)
#+END_SRC

** Close connection

#+BEGIN_SRC python
driver.close()
#+END_SRC

** References

1. https://neo4j.com/developer/python/

2. https://github.com/neo4j/neo4j-python-driver
